version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - kafka-data:/var/lib/kafka/data

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8000:8000"
    env_file:
      - ./api-gateway/.env.docker
    depends_on:
      - kafka
    restart: unless-stopped

  auth-service:
    build:
      context: ./auth-service
    ports:
      - "3001:3001"
    env_file:
      - ./auth-service/.env.docker
    depends_on:
      - kafka
    restart: unless-stopped

  post-service:
    build:
      context: ./post-service
    env_file:
      - ./post-service/.env.docker
    depends_on:
      - kafka
    restart: unless-stopped

  mail-service:
    build:
      context: ./mail-service
    ports:
      - "3005:3005"
    env_file:
      - ./mail-service/.env.docker
    depends_on:
      - kafka
    restart: unless-stopped

  upload-service:
    build:
      context: ./upload-service
    ports:
      - "3008:3008"
    env_file:
      - ./upload-service/.env.docker
    depends_on:
      - kafka
    restart: unless-stopped

  notification-service:
    build:
      context: ./notification-service
    ports:
      - "3002:3002"
    env_file:
      - ./notification-service/.env.docker
    depends_on:
      - kafka
    restart: unless-stopped

  fe:
    build:
      context: ./fe
    ports:
      - "80:3000"
    env_file:
      - ./fe/.env.docker
    restart: unless-stopped

volumes:
  kafka-data:
  zookeeper-data:
  zookeeper-logs:
